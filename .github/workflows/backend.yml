execution success

name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          curl -LsS "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip" -o sonar-scanner.zip
          unzip sonar-scanner.zip -d ./.sonar/scanner
	  - name: Print Files in Directory
        run: |
          ls -l './.sonar/scanner/sonar-scanner-4.8.0.2856-linux/bin' 	  
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./.sonar/scanner/sonar-scanner-4.8.0.2856-linux/bin/sonar-scanner \
            -Dsonar.projectKey=dotnet_sonar \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN_BACKEND }}
          cd EntityFramework  
          dotnet build
          cd ../..
          ./.sonar/scanner/sonar-scanner-4.8.0.2856-linux/bin/sonar-scanner \
            -Dsonar.login=${{ secrets.SONAR_TOKEN_BACKEND }}